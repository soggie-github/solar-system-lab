name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  #MONGO_URI: 'mongodb+srv://supercluster.h4afy.mongodb.net/sample_mflix'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18, 20]
        operating_system: [ubuntu-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest


    runs-on: ${{ matrix.operating_system }}

    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4
        
      - name: Setup NodeJS Version - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}
      
      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive Test Result
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml

  code-coverage:
    name: code coverage
    runs-on: ubuntu-latest
        
    steps:
    - name: Checkout Repository 
      uses: actions/checkout@v4
                
    - name: Setup NodeJS Version - 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: npm install
        
    - name: Check Code Coverage
      continue-on-error: true
      run: npm run coverage
        
    - name: Archive Test Result
      uses: actions/upload-artifact@v3
      with:
        name: Code-Coverage-Result
        path: coverage
        retention-days: 5

  docker:
    name: Containerization 
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4


      
    - name: Dockerhub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build For Testing
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: ${{ secrets.DOCKER_USERNAME }}/solar-system-lab:${{ github.sha }}


    - name: Docker Image Testing
      run: |
        docker images
        docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ secrets.DOCKER_USERNAME }}/solar-system-lab:${{ github.sha }}
        
        export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
        echo $IP

        echo Testing image URL using wget
        wget -q -o 127.0.0.1:3000/live | grep live